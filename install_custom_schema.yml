# run as: ansible-playbook -C -i /path/to/hosts.yml -l host(s) -e git_branch=branch install_custom_schema.yml 
#
# assumes you have an [enterpriseldap] host group and variables defined most likely
# in [enterpriseldap:vars] in your hosts file (-i above):
#
# [enterpriseldap:children]
# host1
# host2
#
# [enterpriseldap:vars]
# schema_file= "72org-schema.ldif"
# local_git_location="/var/tmp"
# git_ldap_cf_dir="ssh://git.domain.org/git"
# git_ldap_cf_repo="org_ldap_cf"
---
- name: install custom schema
  hosts: enterpriseldap
  become: yes
  become_user: root
  become_method: sudo
  tasks:
  - name: checkout repository containing schema
    local_action:
      git repo="{{ git_ldap_cf_dir }}/{{ git_ldap_cf_repo }}" dest="{{ local_git_location }}/{{ git_ldap_cf_repo }}" version="{{ git_branch | default('master') }}"
    become: no
    run_once: true
    register: repository_checked_out
    check_mode: no
  - name: check that schema file is available
    local_action: stat path="{{ local_git_location }}/{{git_ldap_cf_repo}}/{{schema_file }}"
    register: schemafile
    become: no
  - name: copy schema file into place on directory server
    copy: 
      backup: yes 
      src: "{{ local_git_location }}/{{ git_ldap_cf_repo}}/{{ schema_file }}"
      dest: "/etc/dirsrv/slapd-{{ ansible_hostname }}/schema/{{ schema_file }}"
    register: schema_updated
    when: (schemafile.stat.readable is defined and schemafile.stat.readable == true)
  - name: restart slapd if centos 5 or 6
    service: name=dirsrv state=restarted
    when: ansible_distribution == "CentOS" and ( ansible_distribution_major_version == "5" or ansible_distribution_major_version == "6" )  and schema_updated.changed
  - name: restart slapd if centos 7
    systemd: name=dirsrv@{{ ansible_hostname }} state=restarted
    when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7" and schema_updated.changed
  - name: delete temp repository
    local_action:
      file path="{{ local_git_location }}/{{ git_ldap_cf_repo}}" state=absent
    become: no
    run_once: true
    check_mode: no
#   
# - name: Display all variables/facts known for a host
#   debug:
#     var: hostvars[inventory_hostname]
